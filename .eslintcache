[{"/Users/jacoblayton/workspace/taylin/front-end/src/index.js":"1","/Users/jacoblayton/workspace/taylin/front-end/src/reportWebVitals.js":"2","/Users/jacoblayton/workspace/taylin/front-end/src/App.js":"3","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Home.js":"4","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Admin.js":"5","/Users/jacoblayton/workspace/taylin/front-end/src/context/auth.js":"6","/Users/jacoblayton/workspace/taylin/front-end/src/PrivateRoute.js":"7","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Login.js":"8","/Users/jacoblayton/workspace/taylin/front-end/src/components/AuthForms.js":"9","/Users/jacoblayton/workspace/taylin/front-end/src/auth/auth0-provider-with-history.js":"10","/Users/jacoblayton/workspace/taylin/front-end/src/components/Login-Button.js":"11","/Users/jacoblayton/workspace/taylin/front-end/src/components/Logout-Button.js":"12","/Users/jacoblayton/workspace/taylin/front-end/src/pages/ForTheHome.js":"13","/Users/jacoblayton/workspace/taylin/front-end/src/pages/About.js":"14","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Lifestyle.js":"15","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Minimalism.js":"16","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Contact.js":"17","/Users/jacoblayton/workspace/taylin/front-end/src/components/Navbar.js":"18","/Users/jacoblayton/workspace/taylin/front-end/src/components/HamburgerButton.js":"19","/Users/jacoblayton/workspace/taylin/front-end/src/components/Navmenu.js":"20","/Users/jacoblayton/workspace/taylin/front-end/src/components/NavMenu.js":"21","/Users/jacoblayton/workspace/taylin/front-end/src/components/PostCard.js":"22","/Users/jacoblayton/workspace/taylin/front-end/src/pages/BlogPost.js":"23","/Users/jacoblayton/workspace/taylin/front-end/src/pages/AdminPost.js":"24","/Users/jacoblayton/workspace/taylin/front-end/src/pages/CreatePost.js":"25","/Users/jacoblayton/workspace/taylin/front-end/src/components/CreatePostForm.js":"26","/Users/jacoblayton/workspace/taylin/front-end/src/components/ConfirmationModal.js":"27","/Users/jacoblayton/workspace/taylin/front-end/src/pages/EditPost.js":"28","/Users/jacoblayton/workspace/taylin/front-end/src/components/EditPostForm.js":"29","/Users/jacoblayton/workspace/taylin/front-end/src/components/Footer.js":"30","/Users/jacoblayton/workspace/taylin/front-end/src/pages/ProductReviews.js":"31","/Users/jacoblayton/workspace/taylin/front-end/src/helpers/helperFunctions.js":"32","/Users/jacoblayton/workspace/taylin/front-end/src/helpers/categoryMapping.js":"33","/Users/jacoblayton/workspace/taylin/front-end/src/components/NavButtonsDesktop.js":"34"},{"size":946,"mtime":1615267171939,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1612050581443,"results":"37","hashOfConfig":"36"},{"size":2606,"mtime":1630800644592,"results":"38","hashOfConfig":"36"},{"size":6488,"mtime":1636932933223,"results":"39","hashOfConfig":"36"},{"size":2000,"mtime":1634612722341,"results":"40","hashOfConfig":"36"},{"size":160,"mtime":1612053782081,"results":"41","hashOfConfig":"36"},{"size":450,"mtime":1612056673314,"results":"42","hashOfConfig":"36"},{"size":582,"mtime":1630803047229,"results":"43","hashOfConfig":"36"},{"size":812,"mtime":1612056547987,"results":"44","hashOfConfig":"36"},{"size":785,"mtime":1630546715093,"results":"45","hashOfConfig":"36"},{"size":354,"mtime":1630286900246,"results":"46","hashOfConfig":"36"},{"size":342,"mtime":1629586139315,"results":"47","hashOfConfig":"36"},{"size":1251,"mtime":1630191024391,"results":"48","hashOfConfig":"36"},{"size":276,"mtime":1617942753223,"results":"49","hashOfConfig":"36"},{"size":1243,"mtime":1630191018583,"results":"50","hashOfConfig":"36"},{"size":1247,"mtime":1630191002560,"results":"51","hashOfConfig":"36"},{"size":114,"mtime":1612590140208,"results":"52","hashOfConfig":"36"},{"size":647,"mtime":1633906092814,"results":"53","hashOfConfig":"36"},{"size":461,"mtime":1633903304136,"results":"54","hashOfConfig":"36"},{"size":462,"mtime":1612653211157,"results":"55","hashOfConfig":"36"},{"size":1496,"mtime":1630279157728,"results":"56","hashOfConfig":"36"},{"size":2137,"mtime":1632091324762,"results":"57","hashOfConfig":"36"},{"size":2704,"mtime":1636935352049,"results":"58","hashOfConfig":"36"},{"size":4543,"mtime":1630799913096,"results":"59","hashOfConfig":"36"},{"size":823,"mtime":1630799904552,"results":"60","hashOfConfig":"36"},{"size":4885,"mtime":1630637587004,"results":"61","hashOfConfig":"36"},{"size":1086,"mtime":1615769367666,"results":"62","hashOfConfig":"36"},{"size":1441,"mtime":1630800523940,"results":"63","hashOfConfig":"36"},{"size":4325,"mtime":1634704864248,"results":"64","hashOfConfig":"36"},{"size":1725,"mtime":1627774572464,"results":"65","hashOfConfig":"36"},{"size":1265,"mtime":1630190994176,"results":"66","hashOfConfig":"36"},{"size":144,"mtime":1630278593759,"results":"67","hashOfConfig":"36"},{"size":232,"mtime":1630550258360,"results":"68","hashOfConfig":"36"},{"size":860,"mtime":1633905245235,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1t50bew",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},"/Users/jacoblayton/workspace/taylin/front-end/src/index.js",[],["152","153"],"/Users/jacoblayton/workspace/taylin/front-end/src/reportWebVitals.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/App.js",["154"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\nimport Home from './pages/Home';\nimport Admin from './pages/Admin';\nimport Login from \"./pages/Login\";\nimport Minimalism from \"./pages/Minimalism\";\nimport ProductReviews from \"./pages/ProductReviews\";\nimport ForTheHome from \"./pages/ForTheHome\";\nimport Lifestyle from \"./pages/Lifestyle\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Navbar from \"./components/Navbar\";\nimport NavMenu from './components/NavMenu';\nimport Footer from './components/Footer';\nimport BlogPost from './pages/BlogPost';\nimport AdminPost from './pages/AdminPost';\nimport CreatePost from './pages/CreatePost';\nimport EditPost from './pages/EditPost';\nimport { AuthContext } from \"./context/auth\";\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fab);\n\nfunction App(props) {\n\t// Auth\n\tconst existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n\tconst [authTokens, setAuthTokens] = useState(existingTokens);\n\tconst setTokens = (data) => {\n\t\tlocalStorage.setItem(\"tokens\", JSON.stringify(data));\n\t\tsetAuthTokens(data);\n\t}\n\t// Nav\n\tconst [displayMenu, setDisplayMenu] = useState(false);\n\n\tfunction toggleMenu() {\n\t\tif(displayMenu) {\n\t\t\tsetDisplayMenu(false);\n\t\t} else {\n\t\t\tsetDisplayMenu(true);\n\t\t}\n\t}\n\n\tfunction handleMouseUp(e) {\n\t\ttoggleMenu();\n\t}\n\treturn (\n\t\t<AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar toggleMenu={toggleMenu} />\n\t\t\t\t\t<NavMenu displayMenu={displayMenu} handleMouseUp={handleMouseUp}/>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t<Route path=\"/category/minimalism\" component={Minimalism} />\n\t\t\t\t\t<Route path=\"/category/product_reviews\" component={ProductReviews} />\n\t\t\t\t\t<Route path=\"/category/for_the_home\" component={ForTheHome} />\n\t\t\t\t\t<Route path=\"/category/lifestyle\" component={Lifestyle} />\n\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t<Route path=\"/contact\" component={Contact} />\n\t\t\t\t\t<Route path=\"/blogpost/:id\" component={BlogPost} />\n\t\t\t\t\t<PrivateRoute path=\"/admin\" component={Admin} />\n\t\t\t\t\t<PrivateRoute path=\"/adminpost/:id\" component={AdminPost} />\n\t\t\t\t\t<PrivateRoute path=\"/createpost\" component={CreatePost} />\n\t\t\t\t\t<PrivateRoute path=\"/editpost/:id\" component={EditPost} />\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</AuthContext.Provider>\n  );\n}\n\nexport default App;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Home.js",["155","156","157","158"],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/Admin.js",["159","160"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LogoutButton from '../components/Logout-Button';\nimport PostCard from \"../components/PostCard\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport '../styles/home-page.css';\n\n\nfunction Admin(props) {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const history = useHistory();\n  console.log('User: ', user);\n  // if (user) {\n  //   console.log('USer: ', user);\n  //   console.log('user email: ', user.email);\n  //   console.log('user email verified: ', user.email_verified);\n  // } else {\n  //   history.push('/');\n  // }\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n\n    useEffect( async () => {\n      let mounting = true;\n      axios.get('http://localhost:9001/posts')\n        .then(res =>  {\n          console.log('API CALLED', res);\n                  if(mounting) {\n                      setPosts(res.data);\n                  }\n        })\n        .catch(err => {\n          console.log('Error in get request', err);\n        })\n          return () => mounting = false;\n      }, []);\n\n      if (isLoading) {\n        return <div> LOADING.... </div>;\n      }\n  \n  return (\n    isAuthenticated ? (\n      <div className='home-container'>\n        <div className='admin-buttons'>\n          <h1 className='admin-title'>Admin Page</h1>\n          <h2>Hello {user.name}</h2>\n          <LogoutButton />\n          <Link to='/createpost'>\n            <button className='admin-button'>Create New Post</button>\n          </Link>\n          <div className='line-break' />\n        </div>\n        {posts.map(post => {\n            return ( \n                    <PostCard post={post} key={post.id} pathname={location.pathname}/>\n            )\n        })}\n      </div>\n    ) :\n    <div className='administrators-only-section'>\n      <h1>This page is for administrators only.</h1>\n    </div>\n  );\n};\n\nexport default Admin;","/Users/jacoblayton/workspace/taylin/front-end/src/context/auth.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/PrivateRoute.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/Login.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/AuthForms.js",[],["161","162"],"/Users/jacoblayton/workspace/taylin/front-end/src/auth/auth0-provider-with-history.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/Login-Button.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/Logout-Button.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/ForTheHome.js",["163"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\nimport '../styles/category-pages.css';\n\nfunction ForTheHome(props) {\n    const [posts, setPosts] = useState([]);\n\n\tuseEffect(() => {\n        let mounting = true;\n\t\taxios.get('http://localhost:9001/posts/category/for_the_home')\n\t\t\t.then(res =>  {\n\t\t\t\tconsole.log('API CALLED', res);\n                if(mounting) {\n                    setPosts(res.data);\n                }\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error in get request', err);\n\t\t\t})\n        return () => mounting = false;\n\t  }, []);\n    console.log('POSTS: ', posts);\n  return (\n    <div className='category-page'>\n        <div className='category-header'>\n            <h1 className='category-title'>For The Home</h1>\n            <div className='category-line-break' />\n        </div>\n        {posts.map(post => {\n            return ( \n                // <Link to={`/blogpost/${post.id}`} key={post.id}>\n                //     <PostCard post={post} key={post.id}/>\n                // </Link>\n                <PostCard post={post} key={post.id}/>\n            )\n        })}\n    </div>\n    );\n}\n\nexport default ForTheHome;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/About.js",["164","165","166","167","168","169","170"],"import React from \"react\";\nimport { HtmlEditor, Image, Inject, Link, QuickToolbar, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\n\n\nfunction About(props) {\n  return (\n    <div>\n      <h1>About Page</h1>\n    </div>\n  );\n}\n\nexport default About;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Lifestyle.js",["171"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\nimport '../styles/category-pages.css';\n\nfunction Lifestyle(props) {\n    const [posts, setPosts] = useState([]);\n\n\tuseEffect(() => {\n        let mounting = true;\n\t\taxios.get('http://localhost:9001/posts/category/lifestyle')\n\t\t\t.then(res =>  {\n\t\t\t\tconsole.log('API CALLED', res);\n                if(mounting) {\n                    setPosts(res.data);\n                }\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error in get request', err);\n\t\t\t})\n        return () => mounting = false;\n\t  }, []);\n    console.log('POSTS: ', posts);\n  return (\n    <div className='category-page'>\n        <div className='category-header'>\n            <h1 className='category-title'>Lifestyle</h1>\n            <div className='category-line-break' />\n        </div>\n        {posts.map(post => {\n            return ( \n                // <Link to={`/blogpost/${post.id}`} key={post.id}>\n                //     <PostCard post={post} key={post.id}/>\n                // </Link>\n                <PostCard post={post} key={post.id}/>\n            )\n        })}\n    </div>\n    );\n}\n\nexport default Lifestyle;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Minimalism.js",["172"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\nimport '../styles/category-pages.css';\n\nfunction Minimalism(props) {\n    const [posts, setPosts] = useState([]);\n\n\tuseEffect(() => {\n        let mounting = true;\n\t\taxios.get('http://localhost:9001/posts/category/minimalism')\n\t\t\t.then(res =>  {\n\t\t\t\tconsole.log('API CALLED', res);\n                if(mounting) {\n                    setPosts(res.data);\n                }\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error in get request', err);\n\t\t\t})\n        return () => mounting = false;\n\t  }, []);\n    console.log('POSTS: ', posts);\n  return (\n    <div className='category-page'>\n        <div className='category-header'>\n            <h1 className='category-title'>Minimalism</h1>\n            <div className='category-line-break' />\n        </div>\n        {posts.map(post => {\n            return ( \n                // <Link to={`/blogpost/${post.id}`} key={post.id}>\n                //     <PostCard post={post} key={post.id}/>\n                // </Link>\n                <PostCard post={post} key={post.id}/>\n            )\n        })}\n    </div>\n    );\n}\n\nexport default Minimalism;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/Contact.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/Navbar.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/HamburgerButton.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/Navmenu.js",["173","174"],"/Users/jacoblayton/workspace/taylin/front-end/src/components/NavMenu.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/PostCard.js",["175"],"import React from \"react\";\nimport '../styles/post-card.css';\nimport moment from 'moment';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { titleToUrlHelper } from '../helpers/helperFunctions.js';\n\nconst PostCard = (props) => {\n    const createdDate = moment(props.post.created_date).format('MMMM Do, YYYY');\n    let urlStringLiteral;\n    if(props.pathname === '/admin') {\n        urlStringLiteral = 'adminpost';\n    } else {\n        urlStringLiteral = 'blogpost';\n    }\n    let displayCategory;\n    if (props.post.category === 'product_reviews') {\n        displayCategory = 'Product Review';\n    } else if (props.post.category === 'lifestyle') {\n        displayCategory = 'Lifestyle';\n    } else if (props.post.category === 'for_the_home') {\n        displayCategory = 'For The Home';\n    } else {\n        displayCategory = 'General';\n    }\n    const urlFriendlyTitle = titleToUrlHelper(props.post.title);\n\n    return (\n    <div className='card-wrapper'>\n        <div className='card-wrapper-sans-linebreak'>\n            <Link to={`/${urlStringLiteral}/${props.post.id}/${urlFriendlyTitle}`} key={props.post.id}>\n                <img src={props.post.image_url} alt=\"\"/>\n            </Link>\n            <div className='card-info'>\n\n                    <h2 className='card-title'>\n                    <Link to={`/${urlStringLiteral}/${props.post.id}/${urlFriendlyTitle}`} key={props.post.id}>{props.post.title}</Link>\n                    </h2>\n\n                <h5>{createdDate}</h5>\n                <h5 className='card-category'>\n                    <Link to={`/category/${props.post.category}`}>{displayCategory}</Link>\n                </h5>\n                <p>{props.post.blurb}</p>\n                <Link to={`/${urlStringLiteral}/${props.post.id}/${urlFriendlyTitle}`} key={props.post.id}>\n                    <div className='read-more'>\n                        <span>READ MORE</span>\n                        <span id='read-more-arrow'> »</span>\n                    </div>\n                </Link>\n            </div>\n        </div>\n        <div className='card-line-break' />\n    </div>\n    );\n};\n\nexport default PostCard;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/BlogPost.js",["176"],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/AdminPost.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/CreatePost.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/CreatePostForm.js",["177","178","179"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { HtmlEditor, Image, Inject, Link, QuickToolbar, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\nimport '../styles/edit-post-form.css'\nimport { findCategoryNumber } from '../helpers/categoryMapping.js';\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst RTE = ({ field, form, ...props }) => {\n    const change = (content) => {\n        form.setFieldValue(field.name, content.value);\n    }\n\n    return (\n        <RichTextEditorComponent htmlAttributes={{ name: field.name }} change={change.bind(this)}>\n            <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar]} />\n        </RichTextEditorComponent>\n    );\n};\n\nconst CreatePostForm = () => {\n    const { user, isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\n    const today = moment().format('YYYY-MM-DD');\n    let history = useHistory();\n  return(\n        <Formik\n            initialValues={{ \n                created_date: today,\n                title: '',\n                category: '',\n                image_url: '',\n                blurb: '',\n                content: ''\n            }}\n            validationSchema={Yup.object({\n                title: Yup.string()\n                    .required('Required'),\n                category: Yup.string()\n                    .required('Required'),\n                image_url: Yup.string()\n                    .required('Required'),\n                blurb: Yup.string()\n                    .required('Required'),\n                content: Yup.string()\n                    .required('Required')\n            })}\n            onSubmit={ async (values, { setSubmitting }) => {\n                values['category_int'] = findCategoryNumber(values.category);\n                const token = await getAccessTokenSilently();\n                // console.log('Token: ', token);\n                axios.post('http://localhost:9001/posts', values, {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                })\n                .then(res =>  {\n                    console.log('Successfully posted: ', res);\n                    setSubmitting(false);\n                    history.push('/admin');\n                })\n                .catch(err => {\n                    console.log('Error posting', err);\n                })\n              }}\n        >\n            <Form className='create-post-form'>\n                <label htmlFor=\"title\">Title:</label>\n                <Field name=\"title\" type=\"text\" />\n                <ErrorMessage name=\"title\" >\n                { msg => <div className='form-error'>{msg}</div> }\n                </ErrorMessage>\n\n                <label htmlFor=\"category\">Category:</label>\n                <Field as=\"select\" name=\"category\">\n                    <option value=\"\">Select a category</option>\n                    <option value=\"minimalism\">Minimalism</option>\n                    <option value=\"product_reviews\">Product Reviews</option>\n                    <option value=\"lifestyle\">Lifestyle</option>\n                    <option value=\"for_the_home\">For The Home</option>\n                </Field>\n                <ErrorMessage name=\"category\" >\n                { msg => <div className='form-error'>{msg}</div> }\n                </ErrorMessage>\n\n                <label htmlFor=\"image_url\">Image URL</label>\n                <Field name=\"image_url\" type=\"text\" />\n                <ErrorMessage name=\"image_url\" >\n                { msg => <div className='form-error'>{msg}</div> }\n                </ErrorMessage>\n\n                <label htmlFor=\"blurb\">Blurb</label>\n                <Field name=\"blurb\" type=\"text\" as=\"textarea\" className=\"blurb\"/>\n                <ErrorMessage name=\"blurb\" >\n                { msg => <div className='form-error'>{msg}</div> }\n                </ErrorMessage>\n\n                <Field name=\"content\" type=\"html\" component={RTE} className=\"main-content\"/>\n                <ErrorMessage name=\"content\" >\n                { msg => <div className='form-error'>{msg}</div> }\n                </ErrorMessage>\n\n                {/* <label htmlFor=\"content\">Main Content</label>\n                <Field name=\"content\" component={RTE}/>\n                <ErrorMessage name=\"blurb\" /> */}\n                {/* <label htmlFor=\"content\">Main Content</label>\n                <Field name=\"content\" type=\"text\" as=\"textarea\" className=\"main-content\"/>\n                <ErrorMessage name=\"blurb\" /> */}\n                <div className='form-button-container'>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </Form>\n      </Formik>\n  );\n};\n\nexport default CreatePostForm;","/Users/jacoblayton/workspace/taylin/front-end/src/components/ConfirmationModal.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/pages/EditPost.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/EditPostForm.js",["180","181","182"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { HtmlEditor, Image, Inject, Link, QuickToolbar, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\nimport '../styles/edit-post-form.css';\nimport { findCategoryNumber } from '../helpers/categoryMapping.js';\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst RTE = ({ field, form, ...props }) => {\n    // console.log('Field: ', field);\n    // console.log('form: ', form);\n    // console.log('Props: ', props);\n    const change = (content) => {\n        form.setFieldValue(field.name, content.value);\n    }\n\n    return (\n        <RichTextEditorComponent htmlAttributes={{ name: field.name }} value={field.value} change={change.bind(this)}>\n            <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar]} />\n        </RichTextEditorComponent>\n    );\n};\n\nconst EditPostForm = (props) => {\n    const { user, isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\n    const today = moment().format('YYYY-MM-DD');\n    let history = useHistory();\n\n  return(\n        <Formik\n            enableReinitialize={true}\n            initialValues={{ \n                updated_date: today,\n                title: props.postData.title || '',\n                category: props.postData.category || '',\n                image_url: props.postData.image_url || '',\n                blurb: props.postData.blurb || '',\n                content: props.postData.content || ''\n            }}\n            validationSchema={Yup.object({\n                title: Yup.string()\n                    .required('Required'),\n                category: Yup.string()\n                    .required('Required'),\n                image_url: Yup.string()\n                    .required('Required'),\n                blurb: Yup.string()\n                    .required('Required'),\n                content: Yup.string()\n                    .required('Required')\n            })}\n            onSubmit={ async (values, { setSubmitting }) => {\n                console.log(values);\n                values['category_int'] = findCategoryNumber(values.category);\n                const token = await getAccessTokenSilently();\n                console.log('Token: ', token);\n                axios.put(`http://localhost:9001/posts/${props.postData.id}`, values, {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                })\n                .then(res =>  {\n                    console.log(`Successfully updated post with id ${props.postData.id}`, res);\n                    setSubmitting(false);\n                    history.push('/admin');\n                })\n                .catch(err => {\n                    console.log('Error posting', err);\n                })\n              }}\n        >\n            <Form>\n                <label htmlFor=\"title\">Title</label>\n                <Field name=\"title\" type=\"text\" />\n                <ErrorMessage name=\"title\" />\n\n                <label htmlFor=\"category\">Category</label>\n                <Field as=\"select\" name=\"category\">\n                    <option value=\"\">Select a category</option>\n                    <option value=\"minimalism\">Minimalism</option>\n                    <option value=\"product_reviews\">Product Reviews</option>\n                    <option value=\"lifestyle\">Lifestyle</option>\n                    <option value=\"for_the_home\">For The Home</option>\n                </Field>\n\n                <label htmlFor=\"image_url\">Image URL</label>\n                <Field name=\"image_url\" type=\"text\" />\n                <ErrorMessage name=\"image_url\" />\n\n                <label htmlFor=\"blurb\">Blurb</label>\n                <Field name=\"blurb\" type=\"text\" as=\"textarea\" className=\"blurb\"/>\n                <ErrorMessage name=\"blurb\" />\n\n                <Field name=\"content\" type=\"html\" component={RTE} className=\"main-content\"/>\n                <ErrorMessage name=\"content\" />\n\n                <div className='form-button-container'>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </Form>\n      </Formik>\n  );\n};\n\nexport default EditPostForm;","/Users/jacoblayton/workspace/taylin/front-end/src/components/Footer.js",["183"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faInstagram } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/footer.css';\n\n\nconst Footer = (props) => {\n\n  return (\n    <div className='footer-container'>\n        <div className='footer-content'>\n            <h1 className='footer-text'>Join The Community</h1>\n            <h4 className='footer-text'>Subscribe for my sustainability newsletter</h4>\n            <div className='footer-interactive'>\n                <div className='footer-form'>\n                    <input type='email' placeholder='EMAIL ADDRESS'/>\n                    <button>Join!</button>\n                </div>\n                <div className='footer-social-icons'>\n                    <FontAwesomeIcon icon={['fab', 'facebook-f']} size=\"lg\" className='social-icon'/>\n                    <FontAwesomeIcon icon={['fab', 'instagram']} size=\"lg\" className='social-icon'/>\n                    <FontAwesomeIcon icon={['fab', 'pinterest-p']} size=\"lg\" className='social-icon'/>\n                    <FontAwesomeIcon icon={['fab', 'twitter']} size=\"lg\" className='social-icon'/>\n                    <FontAwesomeIcon icon={['fab', 'youtube']} size=\"lg\" className='social-icon'/>\n                </div>\n                <div className='footer-copyright'>\n                    <span className='footer-text'>© 2021 TRY FOR THE EARTH</span>\n                    <span className='footer-text'>ALL RIGHTS RESERVED</span>\n                    <span className='footer-text'>DESIGN AND DEVELOPMENT BY JACOB LAYTON</span>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default Footer;","/Users/jacoblayton/workspace/taylin/front-end/src/pages/ProductReviews.js",["184"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PostCard from \"../components/PostCard\";\nimport '../styles/category-pages.css';\n\nfunction ProductReviews(props) {\n    const [posts, setPosts] = useState([]);\n\n\tuseEffect(() => {\n        let mounting = true;\n\t\taxios.get('http://localhost:9001/posts/category/product_reviews')\n\t\t\t.then(res =>  {\n\t\t\t\tconsole.log('API CALLED', res);\n                if(mounting) {\n                    setPosts(res.data);\n                }\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error in get request', err);\n\t\t\t})\n        return () => mounting = false;\n\t  }, []);\n    console.log('POSTS: ', posts);\n  return (\n    <div className='category-page'>\n        <div className='category-header'>\n            <h1 className='category-title'>Product Reviews</h1>\n            <div className='category-line-break' />\n        </div>\n        {posts.map(post => {\n            return ( \n                // <Link to={`/blogpost/${post.id}`} key={post.id}>\n                //     <PostCard post={post} key={post.id}/>\n                // </Link>\n                <PostCard post={post} key={post.id}/>\n            )\n        })}\n    </div>\n    );\n}\n\nexport default ProductReviews;","/Users/jacoblayton/workspace/taylin/front-end/src/helpers/helperFunctions.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/helpers/categoryMapping.js",[],"/Users/jacoblayton/workspace/taylin/front-end/src/components/NavButtonsDesktop.js",["185"],"import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBars } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/nav-buttons-desktop.css';\n\nconst NavButtonsDesktop = (props) => {\n    // function handleClick(e) {\n    //     console.log('Button Clicked!');\n    //     props.handleClick();\n    // }\n\n  return (\n    <div className='nav-buttons-desktop'>\n      <div className='desktop-home-button'>\n          <Link to='/'>Home</Link>\n      </div>\n      <div className='desktop-category-buttons'>\n        <Link to='/category/product_reviews'>Product Reviews</Link>\n        <Link to='/category/for_the_home'>For The Home</Link>\n        <Link to='/category/lifestyle'>Lifestyle</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NavButtonsDesktop;",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":2,"column":35,"nodeType":"192","messageId":"193","endLine":2,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":23,"column":15,"nodeType":"192","messageId":"193","endLine":23,"endColumn":34},{"ruleId":"195","severity":1,"message":"196","line":70,"column":13,"nodeType":"197","endLine":70,"endColumn":65},{"ruleId":"195","severity":1,"message":"196","line":77,"column":15,"nodeType":"197","endLine":77,"endColumn":67},{"ruleId":"190","severity":1,"message":"198","line":12,"column":9,"nodeType":"192","messageId":"193","endLine":12,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":24,"column":16,"nodeType":"201","endLine":37,"endColumn":8},{"ruleId":"186","replacedBy":"202"},{"ruleId":"188","replacedBy":"203"},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"204","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":20},{"ruleId":"190","severity":1,"message":"205","line":2,"column":22,"nodeType":"192","messageId":"193","endLine":2,"endColumn":27},{"ruleId":"190","severity":1,"message":"206","line":2,"column":29,"nodeType":"192","messageId":"193","endLine":2,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":2,"column":37,"nodeType":"192","messageId":"193","endLine":2,"endColumn":41},{"ruleId":"190","severity":1,"message":"207","line":2,"column":43,"nodeType":"192","messageId":"193","endLine":2,"endColumn":55},{"ruleId":"190","severity":1,"message":"208","line":2,"column":57,"nodeType":"192","messageId":"193","endLine":2,"endColumn":80},{"ruleId":"190","severity":1,"message":"209","line":2,"column":82,"nodeType":"192","messageId":"193","endLine":2,"endColumn":89},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"210","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":25},{"ruleId":"190","severity":1,"message":"211","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":16},{"ruleId":"190","severity":1,"message":"212","line":4,"column":16,"nodeType":"192","messageId":"193","endLine":4,"endColumn":27},{"ruleId":"190","severity":1,"message":"213","line":9,"column":13,"nodeType":"192","messageId":"193","endLine":9,"endColumn":28},{"ruleId":"190","severity":1,"message":"214","line":25,"column":13,"nodeType":"192","messageId":"193","endLine":25,"endColumn":17},{"ruleId":"190","severity":1,"message":"213","line":25,"column":19,"nodeType":"192","messageId":"193","endLine":25,"endColumn":34},{"ruleId":"190","severity":1,"message":"215","line":25,"column":36,"nodeType":"192","messageId":"193","endLine":25,"endColumn":45},{"ruleId":"190","severity":1,"message":"214","line":28,"column":13,"nodeType":"192","messageId":"193","endLine":28,"endColumn":17},{"ruleId":"190","severity":1,"message":"213","line":28,"column":19,"nodeType":"192","messageId":"193","endLine":28,"endColumn":34},{"ruleId":"190","severity":1,"message":"215","line":28,"column":36,"nodeType":"192","messageId":"193","endLine":28,"endColumn":45},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"216","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":20},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'postsMostRecentNine' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["217"],["218"],"'HtmlEditor' is defined but never used.","'Image' is defined but never used.","'Inject' is defined but never used.","'QuickToolbar' is defined but never used.","'RichTextEditorComponent' is defined but never used.","'Toolbar' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faBars' is defined but never used.","'useLocation' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]